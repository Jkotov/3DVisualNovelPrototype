//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputSystem/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""3e5e3bb8-7633-4216-b8bc-5f3ee3d5066a"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""7d23c144-c085-4b28-98f4-37b1ed89c82c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SceneLoad"",
                    ""type"": ""Button"",
                    ""id"": ""18afbefa-5e94-4be3-b634-f700dc2dcdde"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartDialog"",
                    ""type"": ""Button"",
                    ""id"": ""15fea59f-52e6-4c17-b6d9-636b8134774c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pick"",
                    ""type"": ""Button"",
                    ""id"": ""52181c24-e06e-47de-9a0e-8396b94a589c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""a7c16ea5-1340-4389-9288-d5e41c1c4a3c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8136e4f5-9ca8-4405-a678-c06c99e583be"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""725d4a5e-e0eb-4b19-81b3-75a2da3c1ea0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a6bd2aad-dcb5-4b98-b7ed-0b2e958952e5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eb0ebeda-7c22-4f19-8ead-a44ee9695f1c"",
                    ""path"": ""<Keyboard>/F"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SceneLoad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2dd820b-9e31-4ee6-9c8a-88ca2fb8ab59"",
                    ""path"": ""<Keyboard>/B"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartDialog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a55711f5-2b04-4444-93aa-24ca2ecedf7d"",
                    ""path"": ""<Keyboard>/G"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Qsave"",
            ""id"": ""db63d540-5b67-4465-93c7-f214b95df086"",
            ""actions"": [
                {
                    ""name"": ""QSave"",
                    ""type"": ""Button"",
                    ""id"": ""83c487de-bc71-46a5-aacf-4522cbe8186d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QLoad"",
                    ""type"": ""Button"",
                    ""id"": ""97133e92-4946-4225-bf28-0cf3e6c3f29e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QDelete"",
                    ""type"": ""Button"",
                    ""id"": ""606bf609-d182-43b5-8251-34442a451347"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""72786842-23d0-46e5-ae44-027cc0aa7155"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QSave"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86185334-95f3-425c-9fca-691071c1e97c"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QLoad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f0bba40-af16-4382-ae35-2297c2f0af99"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QDelete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_SceneLoad = m_Player.FindAction("SceneLoad", throwIfNotFound: true);
        m_Player_StartDialog = m_Player.FindAction("StartDialog", throwIfNotFound: true);
        m_Player_Pick = m_Player.FindAction("Pick", throwIfNotFound: true);
        // Qsave
        m_Qsave = asset.FindActionMap("Qsave", throwIfNotFound: true);
        m_Qsave_QSave = m_Qsave.FindAction("QSave", throwIfNotFound: true);
        m_Qsave_QLoad = m_Qsave.FindAction("QLoad", throwIfNotFound: true);
        m_Qsave_QDelete = m_Qsave.FindAction("QDelete", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_SceneLoad;
    private readonly InputAction m_Player_StartDialog;
    private readonly InputAction m_Player_Pick;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @SceneLoad => m_Wrapper.m_Player_SceneLoad;
        public InputAction @StartDialog => m_Wrapper.m_Player_StartDialog;
        public InputAction @Pick => m_Wrapper.m_Player_Pick;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @SceneLoad.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSceneLoad;
                @SceneLoad.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSceneLoad;
                @SceneLoad.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSceneLoad;
                @StartDialog.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStartDialog;
                @StartDialog.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStartDialog;
                @StartDialog.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStartDialog;
                @Pick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPick;
                @Pick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPick;
                @Pick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPick;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @SceneLoad.started += instance.OnSceneLoad;
                @SceneLoad.performed += instance.OnSceneLoad;
                @SceneLoad.canceled += instance.OnSceneLoad;
                @StartDialog.started += instance.OnStartDialog;
                @StartDialog.performed += instance.OnStartDialog;
                @StartDialog.canceled += instance.OnStartDialog;
                @Pick.started += instance.OnPick;
                @Pick.performed += instance.OnPick;
                @Pick.canceled += instance.OnPick;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Qsave
    private readonly InputActionMap m_Qsave;
    private IQsaveActions m_QsaveActionsCallbackInterface;
    private readonly InputAction m_Qsave_QSave;
    private readonly InputAction m_Qsave_QLoad;
    private readonly InputAction m_Qsave_QDelete;
    public struct QsaveActions
    {
        private @PlayerInputActions m_Wrapper;
        public QsaveActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @QSave => m_Wrapper.m_Qsave_QSave;
        public InputAction @QLoad => m_Wrapper.m_Qsave_QLoad;
        public InputAction @QDelete => m_Wrapper.m_Qsave_QDelete;
        public InputActionMap Get() { return m_Wrapper.m_Qsave; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QsaveActions set) { return set.Get(); }
        public void SetCallbacks(IQsaveActions instance)
        {
            if (m_Wrapper.m_QsaveActionsCallbackInterface != null)
            {
                @QSave.started -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQSave;
                @QSave.performed -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQSave;
                @QSave.canceled -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQSave;
                @QLoad.started -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQLoad;
                @QLoad.performed -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQLoad;
                @QLoad.canceled -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQLoad;
                @QDelete.started -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQDelete;
                @QDelete.performed -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQDelete;
                @QDelete.canceled -= m_Wrapper.m_QsaveActionsCallbackInterface.OnQDelete;
            }
            m_Wrapper.m_QsaveActionsCallbackInterface = instance;
            if (instance != null)
            {
                @QSave.started += instance.OnQSave;
                @QSave.performed += instance.OnQSave;
                @QSave.canceled += instance.OnQSave;
                @QLoad.started += instance.OnQLoad;
                @QLoad.performed += instance.OnQLoad;
                @QLoad.canceled += instance.OnQLoad;
                @QDelete.started += instance.OnQDelete;
                @QDelete.performed += instance.OnQDelete;
                @QDelete.canceled += instance.OnQDelete;
            }
        }
    }
    public QsaveActions @Qsave => new QsaveActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnSceneLoad(InputAction.CallbackContext context);
        void OnStartDialog(InputAction.CallbackContext context);
        void OnPick(InputAction.CallbackContext context);
    }
    public interface IQsaveActions
    {
        void OnQSave(InputAction.CallbackContext context);
        void OnQLoad(InputAction.CallbackContext context);
        void OnQDelete(InputAction.CallbackContext context);
    }
}
